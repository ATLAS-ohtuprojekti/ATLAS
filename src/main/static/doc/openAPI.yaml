openapi: 3.0.0
info:
  title: Atlas API
  version: 1.0.0
servers:
  - url: /api/v1
    description: at current host
paths:
  /taxon:
    get:
      summary: Get a collection of species.
      description: Can be used to populate a list or table.
      tags:
        - taxon
      parameters:
        - name: group
          in: query
          description: Name of the species group. If omitted a collection of all species is returned.
          required: false
          explode: true
          schema:
            type: string
            default: ""
            enum:
              - birds
      responses:
        200:
          description: A collection of species.
          content:
            application/x-collection+json:
              schema:
                type: array
                items:
                  $ref: 'components.yaml#/schemas/Species'
                example:
                  - speciesFI: "Kaakkuri"
                    speciesEN: "Red-throated Diver"
                    speciesSCI: "Gavia stellata"
                    speciesAbbr: "GAVSTE"
                    speciesGroup_id: 1
                    visibility: 1
                    speciesSV: "Sm√•lom"
                    id: 36
                    species_id: "MX.25836"
                    links:
                      - rel: collection
                        href: "/taxon/25836/atlas"
                  - speciesFI: "Kuikka"
                    speciesEN: "Black-throated Diver"
                    speciesSCI: "Gavia arctica"
                    speciesAbbr: "GAVARC"
                    speciesGroup_id: 1
                    visibility: 1
                    speciesSV: "Storlom"
                    id: 37
                    species_id: "MX.25837"
                    links:
                      - rel: collection
                        href: "/taxon/25837/atlas"

  /taxon/findBy:
    get:
      parameters:
        - name: name
          in: query
          description: A substring of a name of some species
          required: false
          schema:
            type: string
      summary: Find species by different features
      tags:
        - taxon
      responses:
        '200':
          description: A collection of found species
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components.yaml#/schemas/Species'

  /taxon/{speciesId}:
    get:
      tags:
        - taxon
      summary: Get a species.
      parameters:
        - $ref: 'components.yaml#/parameters/speciesId'
      responses:
        200:
          description: A species.
          content:
            application/x-resource+json:
              schema:
                $ref: 'components.yaml#/schemas/Species'
          links:
            collection:
              description: The collection of atlases in which the species is enlisted.

  /taxon/{speciesId}/atlas:
    get:
      tags:
        - taxon
      summary: Get the collection of atlases in which a species is enlisted.
      parameters:
        - $ref: 'components.yaml#/parameters/speciesId'
      responses:
        200:
          description: The collection of atlases in which a species is enlisted.
          content:
            application/x-collection+json:
              schema:
                $ref: 'components.yaml#/schemas/AtlasCollection'
          links:
            item:
              description: The data of a species in an atlas.

  /taxon/{speciesId}/atlas/{atlasId}:
    get:
      parameters:
        - $ref: 'components.yaml#/parameters/atlasId'
      summary: Get the data of a species in an atlas.
      tags:
        - taxon
      responses:
        '200':
          description: The data of a species in an atlas.
          content:
            application/json:
              schema:
                type: object
                properties:
                  speciesId:
                    type: integer
                    description: ID of the species.
                  atlasId:
                    type: integer
                    description: ID of the atlas.
                  data:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/SpeciesAreaData'
                    description: An array of area mapped data of a species in an atlas.
                example:
                  - speciesId: 25836
                    atlasId: 3
                    data:
                      - gridId: 664329
                        coordinateN: 664
                        coordinateE: 329
                        breedingCategory: 1
                      - gridId: 664331
                        coordinateN: 664
                        coordinateE: 331
                        breedingCategory: 1
                      - gridId: 666328
                        coordinateN: 666
                        coordinateE: 328
                        breedingCategory: 2

  /taxon/{speciesId}/stats:
    get:
      tags:
        - taxon
      summary: Get the collection of statistics of each atlas in which a species is enlisted.
      parameters:
        - $ref: 'components.yaml#/parameters/speciesId'
      responses:
        200:
          description: The collection of statistics of each atlas in which a species is enlisted.
          content:
            application/x-collection+json:
              schema:
                $ref: 'components.yaml#/schemas/AtlasStatisticsCollection'
          links:
            item:
              description: The statistics of an atlas in which a species is enlisted.

  /taxon/{speciesId}/stats/{atlasId}:
    get:
      parameters:
        - $ref: 'components.yaml#/parameters/atlasId'
      summary: Get the statistics of an atlas in which a species is enlisted.
      tags:
        - taxon
      responses:
        '200':
          description: The statistics of an atlas in which a species is enlisted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  speciesId:
                    type: integer
                    description: ID of the species.
                  atlasId:
                    type: integer
                    description: ID of the atlas.
                  statistics:
                    $ref: 'components.yaml#/schemas/Statistics'

  /map/:
    get:
      summary: List of species with datapoints on maps.
      description: Retrieves a list of species with at least one datapoint on some map and a link to that endpoint.
      tags: 
        - map
      responses:
        '200':
          description: A list of all species with datapoints on maps.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        species_id:
                          type: integer
                          description: MX-code of the bird.
                          example: 25836
                        mapEndpoint:
                          type: string
                          description: URL address of the species' map endpoint.
                          example: /api/v1/map/25836/atlas/3?language=fi

  /map/{speciesId}:
    get:
      summary: List of different subcollections for maps
      parameters:
        - $ref: 'components.yaml#/parameters/speciesId'
      description: Retrieves a list of subcollections of maps; atlas maps and their comparison maps.
      tags: 
        - map
      responses:
        '200':
          description: A list of all birds with datapoints on maps.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        subcollection:
                          type: string
                          description: Name of the subcollection
                          example: Atlas
                        subcollectionEndpoint:
                          type: string
                          description: URL address for the subcollection endpoint.
                          example: /api/v1/map/25836/atlas/
  /map/{speciesId}/atlas:
    get:
      parameters:
        - $ref: 'components.yaml#/parameters/speciesId'
      summary: List of different atlases that are available for the species.
      description: Retrieves a list of different atlases that are available for the species.
      tags: 
        - map
      responses:
        '200':
          description: A list of all available atlases.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        subcollection:
                          type: string
                          description: Name of the atlas
                          example: '3'
                        subcollectionEndpoint:
                          type: string
                          description: URL address for the atlas endpoint.
                          example: /api/v1/map/25836/atlas/3

  /grid/{gridId}:
    get:
      parameters:
        - $ref: 'components.yaml#/parameters/gridId'
      summary: List of different subcollections for grids
      description: Retrieves a list of subcollections of grids; stats for a grid and data of a grid.
      tags: 
        - grid
      responses:
        '200':
          description: A list of all subcollections.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        subcollection:
                          type: string
                          description: Name of the subcollection
                          example: stats
                        subcollectionEndpoint:
                          type: string
                          description: URL address for the subcollection endpoint.
                          example: /api/v1/grid/{gridId}/stats/

  /grid/{gridId}/atlas:
    get:
      parameters:
        - $ref: 'components.yaml#/parameters/gridId'
      summary: Lists all atlases that have data for this grid.
      description: Retrieves a list of all atlases that has data for this grid.
      tags: 
        - grid
      responses:
        '200':
          description: A list of all available atlases.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        subcollection:
                          type: string
                          description: Number of the atlas
                          example: '3'
                        subcollectionEndpoint:
                          type: string
                          description: URL address for the atlas endpoint.
                          example: /api/v1/grid/{gridId}/stats/3

  /grid/{gridId}/atlas/{atlasId}:
    get:
      parameters:
        - $ref: 'components.yaml#/parameters/gridId'
        - $ref: 'components.yaml#/parameters/atlasId'
      summary: All data for a grid from the given atlas.
      description: Retrieves all data for one grid in one atlas.
      tags: 
        - grid
      responses:
        '200':
          description: A list of all datapoints in a in a grid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        datapointId:
                          type: integer
                          description: Datapoint id
                          example: '681944'
                        speciesMxCode:
                          type: integer
                          description: Mx code for the species.
                          example: 26277
                        gridId:
                          type: integer
                          description: Id if the grid
                          example: 663319
                        breedingIndex:
                          type: integer
                          description: Breeding index of the species in the grid.
                          example: 50
                        breedingCategory:
                          type: integer
                          description: Breeding category of the species in the grid.
                          example: 3

  /grid/{gridId}/stats/:
    get:
      parameters:
        - $ref: 'components.yaml#/parameters/gridId'
      summary: Statistic for the grid.
      description: Retrieves statistic for the grid; sum of datapoints, number of different species, number of atlases with datapoints.
      tags: 
        - grid
      responses:
        '200':
          description: ''